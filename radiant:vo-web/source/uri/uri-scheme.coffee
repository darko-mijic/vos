# http://www.iana.org/assignments/uri-protocols/uri-protocols.xhtml
class @URI.Scheme extends Space.domain.ValueObject
  # Register as EJSON type
  @type 'URI.Scheme'
  # EJSON serializable fields
  fields: ->
    protocol: String

  @protocols: [
    'aaa'
    'aaas'
    'about'
    'acap'
    'acct'
    'acr'
    'adiumxtra'
    'afp'
    'afs'
    'aim'
    'appdata'
    'apt'
    'attachment'
    'aw'
    'barion'
    'beshare'
    'bitcoin'
    'blob'
    'bolo'
    'callto'
    'cap'
    'chrome'
    'chrome-extension'
    'cid'
    'coap'
    'coaps'
    'com-eventbrite-attendee'
    'content'
    'crid'
    'cvs'
    'data'
    'dav'
    'dict'
    'dlna-playcontainer'
    'dlna-playsingle'
    'dns'
    'dntp'
    'dtn'
    'dvb'
    'ed2k'
    'example'
    'facetime'
    'fax'
    'feed'
    'feedready'
    'file'
    'filesystem'
    'finger'
    'fish'
    'ftp'
    'geo'
    'gg'
    'git'
    'gizmoproject'
    'go'
    'gopher'
    'gtalk'
    'h323'
    'ham'
    'hcp'
    'http'
    'https'
    'iax'
    'icap'
    'icon'
    'im'
    'imap'
    'info'
    'iotdisco'
    'ipn'
    'ipp'
    'ipps'
    'irc'
    'irc6'
    'ircs'
    'iris'
    'iris.beep'
    'iris.lwz'
    'iris.xpc'
    'iris.xpcs'
    'isostore'
    'itms'
    'jabber'
    'jar'
    'jms'
    'keyparc'
    'lastfm'
    'ldap'
    'ldaps'
    'magnet'
    'mailserver'
    'mailto'
    'maps'
    'market'
    'message'
    'mid'
    'mms'
    'modem'
    'ms-access'
    'ms-drive-to'
    'ms-excel'
    'ms-getoffice'
    'ms-help'
    'ms-infopath'
    'ms-media-stream-id'
    'ms-project'
    'ms-powerpoint'
    'ms-publisher'
    'ms-search-repair'
    'ms-secondary-screen-controller'
    'ms-secondary-screen-setup'
    'ms-settings'
    'ms-settings-airplanemode'
    'ms-settings-bluetooth'
    'ms-settings-camera'
    'ms-settings-cellular'
    'ms-settings-cloudstorage'
    'ms-settings-emailandaccounts'
    'ms-settings-language'
    'ms-settings-location'
    'ms-settings-lock'
    'ms-settings-nfctransactions'
    'ms-settings-notifications'
    'ms-settings-power'
    'ms-settings-privacy'
    'ms-settings-proximity'
    'ms-settings-screenrotation'
    'ms-settings-wifi'
    'ms-settings-workplace'
    'ms-spd'
    'ms-transit-to'
    'ms-visio'
    'ms-walk-to'
    'ms-word'
    'msnim'
    'msrp'
    'msrps'
    'mtqp'
    'mumble'
    'mupdate'
    'mvn'
    'news'
    'nfs'
    'ni'
    'nih'
    'nntp'
    'notes'
    'oid'
    'opaquelocktoken'
    'pack'
    'palm'
    'paparazzi'
    'pkcs11'
    'platform'
    'pop'
    'pres'
    'prospero'
    'proxy'
    'psyc'
    'query'
    'redis'
    'rediss'
    'reload'
    'res'
    'resource'
    'rmi'
    'rsync'
    'rtmfp'
    'rtmp'
    'rtsp'
    'rtsps'
    'rtspu'
    'secondlife'
    'service'
    'session'
    'sftp'
    'sgn'
    'shttp'
    'sieve'
    'sip'
    'sips'
    'skype'
    'smb'
    'sms'
    'smtp'
    'snews'
    'snmp'
    'soap.beep'
    'soap.beeps'
    'soldat'
    'spotify'
    'ssh'
    'steam'
    'stun'
    'stuns'
    'submit'
    'svn'
    'tag'
    'teamspeak'
    'tel'
    'teliaeid'
    'telnet'
    'tftp'
    'things'
    'thismessage'
    'tip'
    'tn3270'
    'turn'
    'turns'
    'tv'
    'udp'
    'unreal'
    'urn'
    'ut2004'
    'vemmi'
    'ventrilo'
    'videotex'
    'view-source'
    'wais'
    'webcal'
    'ws'
    'wss'
    'wtai'
    'wyciwyg'
    'xcon'
    'xcon-userid'
    'xfire'
    'xmlrpc.beep'
    'xmlrpc.beeps'
    'xmpp'
    'xri'
    'ymsgr'
    'z39.50'
    'z39.50r'
    'z39.50s'
  ]

  @ports:
    ftp    : 21
    ssh    : 22
    telnet : 23
    smtp   : 25
    dns    : 53
    http   : 80
    pop3   : 110
    nntp   : 119
    imap   : 143
    snmp   : 161
    irc    : 194
    https  : 443
    smtp   : 465

  @defaultScheme: 'http'
  constructor: (data) ->
    protocol = if data and data.protocol then data.protocol else data
    protocol = protocol.toLowerCase() if lodash.isString(protocol)

    unless URI.Scheme.isValid(protocol)
      throw new Error(URI.Scheme.ERRORS.unsupportedScheme)

    @protocol = protocol
    Object.freeze(@)

  toString: -> @protocol
  @isValid: (protocol) -> @isSupported(protocol)
  @isSupported: (protocol) -> (protocol in @protocols)
  @addScheme: (protocol) -> @protocols.push(protocol)
  @default: -> @defaultScheme
  @defaultPort: (protocol) ->
    @ports[protocol] or null
  @mapDefaultPort: (protocol, port) ->
    @ports[protocol] = port
  @_patterns:
    protocol: /^([A-Za-z][A-Za-z0-9+\-.]*):/
  @hasURIScheme: (uri) -> @_patterns.protocol.test(uri)

  @ERRORS:
    unsupportedScheme: 'Unsupported protocol type'